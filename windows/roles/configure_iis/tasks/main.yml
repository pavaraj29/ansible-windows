---
# tasks file for configure_iis
- name: create staging path
  win_file: path={{ staging_path }} state=directory

- name: Ensure iisuser is present
  win_user:
    name: iisuser
    password: "{{ user_pwd }}"
    state: present
    groups:
      - Users

- name: Add IIS_IUSRS allow rights
  win_acl:
    path: C:\inetpub\wwwroot
    user: iisuser
    rights: FullControl
    type: allow
    state: present
    inherit: ContainerInherit, ObjectInherit
    propagation: 'None'

- name: add identity to apppool
  win_iis_webapppool:
    name: DefaultAppPool
    state: started
    attributes:
     managedPipelineMode: Classic
     processModel.identityType: SpecificUser
     processModel.userName: iisuser
     processModel.password: '{{ user_pwd }}'
     processModel.loadUserProfile: True

- name: create new website's directory
  win_file: path="{{ ansible_site_path }}\\sites" state=directory
  
- name: create new website
  win_iis_website:
    name: "Ansible Test Site"
    state: started
    port: 8080
    physical_path: "{{ ansible_site_path }}\\sites"
  
- name: Open site's port on firewall
  win_firewall_rule:
    name: mysite8080
    enable: yes
    state: present
    localport: 8080
    action: Allow
    direction: In
    protocol: Tcp
    force: true
  tags: firewall

- name: create deploy staging path
  win_file: path={{ ansible_test_staging_path }} state=directory
  
- name: get code to deploy staging path
  win_copy:
    src: files/site.zip
    dest: "{{ ansible_test_staging_path }}\\site.zip"
    force: true
  
- name: unzip code to site path
  win_unzip:
    src: "{{ ansible_test_staging_path }}\\site.zip"
    dest: "{{ ansible_site_path }}"
    creates: "{{ ansible_site_path }}\\index.html"
  tags: unzip
